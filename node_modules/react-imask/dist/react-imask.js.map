{"version":3,"file":"react-imask.js","sources":["../src/mixin.ts","../src/input.ts","../src/hook.ts"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport IMask, { type InputMask, type InputMaskElement, type FactoryOpts, type AllFactoryStaticOpts } from 'imask';\n\n\ntype AnyProps = Record<string, unknown>;\n\nexport\ntype Falsy = false | 0 | \"\" | null | undefined;\n\nexport\ntype ReactMaskOpts = FactoryOpts & { unmask?: 'typed' | boolean };\n\nexport\ntype UnmaskValue<Opts extends ReactMaskOpts> =\n  Opts['unmask'] extends 'typed' ? InputMask<Opts>['typedValue'] :\n  Opts['unmask'] extends Falsy ? InputMask<Opts>['value'] :\n  InputMask<Opts>['unmaskedValue']\n;\n\nexport\ntype ExtractReactMaskOpts<\n  MaskElement extends InputMaskElement,\n  Props extends IMaskInputProps<MaskElement>,\n> = Extract<Props, ReactMaskOpts>;\n\nexport\ntype ReactMaskProps<\n  MaskElement extends InputMaskElement,\n  Props extends IMaskInputProps<MaskElement>=AnyProps,\n> = {\n  onAccept?: (value: UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>>, maskRef: InputMask<ExtractMaskOpts<MaskElement, Props>>, e?: InputEvent) => void;\n  onComplete?: (value: UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>>, maskRef: InputMask<ExtractMaskOpts<MaskElement, Props>>, e?: InputEvent) => void;\n  unmask?: ExtractReactMaskOpts<MaskElement, Props>['unmask'];\n  value?: UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>>;\n  inputRef?: React.Ref<MaskElement>;\n  ref?: React.Ref<React.ComponentType<Props>>;\n}\n\nconst MASK_PROPS: { [key in keyof (AllFactoryStaticOpts & ReactMaskProps<InputMaskElement, AllFactoryStaticOpts>)]: any } = {\n  // common\n  mask: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.instanceOf(RegExp),\n    PropTypes.oneOf([Date, Number, IMask.Masked]),\n    PropTypes.instanceOf(IMask.Masked as any),\n  ]),\n  value: PropTypes.any,\n  unmask: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['typed']),\n  ]),\n  prepare: PropTypes.func,\n  prepareChar: PropTypes.func,\n  validate: PropTypes.func,\n  commit: PropTypes.func,\n  overwrite: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['shift']),\n  ]),\n  eager: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['append', 'remove']),\n  ]),\n  skipInvalid: PropTypes.bool,\n\n  // events\n  onAccept: PropTypes.func,\n  onComplete: PropTypes.func,\n\n  // pattern\n  placeholderChar: PropTypes.string,\n  displayChar: PropTypes.string,\n  lazy: PropTypes.bool,\n  definitions: PropTypes.object,\n  blocks: PropTypes.object,\n\n  // enum\n  enum: PropTypes.arrayOf(PropTypes.string),\n\n  // range\n  maxLength: PropTypes.number,\n  from: PropTypes.number,\n  to: PropTypes.number,\n\n  // date\n  pattern: PropTypes.string,\n  format: PropTypes.func,\n  parse: PropTypes.func,\n  autofix: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['pad']),\n  ]),\n\n  // number\n  radix: PropTypes.string,\n  thousandsSeparator: PropTypes.string,\n  mapToRadix: PropTypes.arrayOf(PropTypes.string),\n  scale: PropTypes.number,\n  normalizeZeros: PropTypes.bool,\n  padFractionalZeros: PropTypes.bool,\n  min: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.instanceOf(Date),\n  ]),\n  max: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.instanceOf(Date),\n  ]),\n\n  // dynamic\n  dispatch: PropTypes.func,\n\n  // ref\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.object }),\n  ]),\n} as const;\n\nconst MASK_PROPS_NAMES = (Object.keys(MASK_PROPS) as Array<keyof typeof MASK_PROPS>).filter(p => p !== 'value');\nconst NON_MASK_OPTIONS_NAMES = ['value', 'unmask', 'onAccept', 'onComplete', 'inputRef'] as const;\n\nexport\ntype ReactElementProps<MaskElement extends InputMaskElement> =\n  Omit<Omit<React.HTMLProps<MaskElement>, keyof typeof MASK_PROPS>, typeof NON_MASK_OPTIONS_NAMES[number] | 'maxLength'>;\n\ntype NonMaskProps<\n  MaskElement extends InputMaskElement,\n  Props extends IMaskMixinProps<MaskElement>=AnyProps\n> = Omit<Props, keyof FactoryOpts>;\n\nexport\ntype ReactMixinComponent<\n  MaskElement extends InputMaskElement,\n  Props extends IMaskMixinProps<MaskElement>=AnyProps,\n> = React.ComponentType<\n  & ReactElementProps<MaskElement>\n  & { inputRef: React.Ref<MaskElement> }\n  & NonMaskProps<MaskElement, Props>\n>;\n\nexport\ntype MaskPropsKeys = Exclude<keyof typeof MASK_PROPS, typeof NON_MASK_OPTIONS_NAMES[number]>;\nconst MASK_OPTIONS_NAMES = MASK_PROPS_NAMES.filter(pName =>\n  NON_MASK_OPTIONS_NAMES.indexOf(pName as typeof NON_MASK_OPTIONS_NAMES[number]) < 0\n) as Array<MaskPropsKeys>;\n\nexport\ntype ExtractMaskOpts<\n  MaskElement extends InputMaskElement,\n  Props extends IMaskInputProps<MaskElement>,\n> = Extract<Props, FactoryOpts>;\n\nexport\ntype IMaskMixinProps<MaskElement extends InputMaskElement> =\n  Omit<ReactMaskProps<MaskElement>, 'ref'> & FactoryOpts;\n\nexport\ntype IMaskInputProps< MaskElement extends InputMaskElement> =\n  ReactElementProps<MaskElement> & IMaskMixinProps<MaskElement>;\n\n\nexport default\nfunction IMaskMixin<\n  MaskElement extends InputMaskElement,\n  Props extends IMaskInputProps<MaskElement>=AnyProps,\n>(ComposedComponent: ReactMixinComponent<MaskElement, Props>) {\n  const MaskedComponent = class extends React.Component<Props> {\n    static displayName: string;\n    static propTypes: typeof MASK_PROPS;\n\n    declare element: MaskElement;\n    declare maskRef?: InputMask<ExtractMaskOpts<MaskElement, Props>>;\n\n    constructor (props: Props) {\n      super(props);\n      this._inputRef = this._inputRef.bind(this);\n    }\n\n    componentDidMount () {\n      if (!this.props.mask) return;\n\n      this.initMask();\n    }\n\n    componentDidUpdate () {\n      const props = this.props;\n      const maskOptions = this._extractMaskOptionsFromProps(props);\n      if (maskOptions.mask) {\n        if (this.maskRef) {\n          this.maskRef.updateOptions(maskOptions as any); // TODO fix\n          if ('value' in props && props.value !== undefined) this.maskValue = props.value;\n        } else {\n          this.initMask(maskOptions);\n        }\n      } else {\n        this.destroyMask();\n        if ('value' in props && props.value !== undefined) {\n          if ((this.element as HTMLElement)?.isContentEditable && (this.element as HTMLElement).tagName !== 'INPUT' && (this.element as HTMLElement).tagName !== 'TEXTAREA') (this.element as HTMLElement).textContent = props.value;\n          else (this.element as HTMLInputElement).value = props.value;\n        }\n      }\n    }\n\n    componentWillUnmount () {\n      this.destroyMask();\n    }\n\n    _inputRef (el: MaskElement) {\n      this.element = el;\n      if (this.props.inputRef) {\n        if (Object.prototype.hasOwnProperty.call(this.props.inputRef, 'current'))\n          (this.props.inputRef as React.MutableRefObject<MaskElement>).current = el;\n        else\n          (this.props.inputRef as React.RefCallback<MaskElement>)(el);\n      }\n    }\n\n    initMask (maskOptions: ExtractMaskOpts<MaskElement, Props> = this._extractMaskOptionsFromProps(this.props)) {\n      this.maskRef = IMask(this.element, maskOptions)\n        .on('accept', this._onAccept.bind(this))\n        .on('complete', this._onComplete.bind(this));\n\n      if ('value' in this.props && this.props.value !== undefined) this.maskValue = this.props.value;\n    }\n\n    destroyMask () {\n      if (this.maskRef) {\n        this.maskRef.destroy();\n        delete this.maskRef;\n      }\n    }\n\n    _extractMaskOptionsFromProps (props: Readonly<Props>): ExtractMaskOpts<MaskElement, Props> {\n      const { ...cloneProps }: Readonly<Props> = props;\n\n      // keep only mask options\n      (Object.keys(cloneProps) as Array<keyof Props>)\n        .filter(prop => MASK_OPTIONS_NAMES.indexOf(prop as MaskPropsKeys) < 0)\n        .forEach(nonMaskProp => {\n          delete cloneProps[nonMaskProp];\n        });\n\n      return cloneProps as ExtractMaskOpts<MaskElement, Props>;\n    }\n\n    _extractNonMaskProps (props: Readonly<Props>): NonMaskProps<MaskElement, Props> {\n      const { ...cloneProps } = props as Props;\n\n      (MASK_PROPS_NAMES as Array<keyof Props>).forEach(maskProp => {\n        if (maskProp !== 'maxLength') delete cloneProps[maskProp];\n      });\n      if (!('defaultValue' in cloneProps)) cloneProps.defaultValue = props.mask ? '' : cloneProps.value;\n      delete cloneProps.value;\n\n      return cloneProps as NonMaskProps<MaskElement, Props>;\n    }\n\n    get maskValue (): UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>> {\n      if (!this.maskRef) return '' as UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>>;\n\n      if (this.props.unmask === 'typed') return this.maskRef.typedValue;\n      if (this.props.unmask) return this.maskRef.unmaskedValue;\n      return this.maskRef.value;\n    }\n\n    set maskValue (value: UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>>) {\n      if (!this.maskRef) return;\n\n      value = (value == null && this.props.unmask !== 'typed' ? '' : value) as UnmaskValue<ExtractReactMaskOpts<MaskElement, Props>>;\n      if (this.props.unmask === 'typed') this.maskRef.typedValue = value;\n      else if (this.props.unmask) this.maskRef.unmaskedValue = value;\n      else this.maskRef.value = value;\n    }\n\n    _onAccept (e?: InputEvent) {\n      if (this.props.onAccept && this.maskRef) this.props.onAccept(this.maskValue, this.maskRef, e);\n    }\n\n    _onComplete (e?: InputEvent) {\n      if (this.props.onComplete && this.maskRef) this.props.onComplete(this.maskValue, this.maskRef, e);\n    }\n\n    render () {\n      return React.createElement(ComposedComponent, {\n        ...this._extractNonMaskProps(this.props),\n        inputRef: this._inputRef,\n      });\n    }\n  };\n\n  const nestedComponentName = ComposedComponent.displayName || ComposedComponent.name || 'Component';\n  MaskedComponent.displayName = `IMask(${nestedComponentName})`;\n  MaskedComponent.propTypes = MASK_PROPS;\n\n  return React.forwardRef<React.ComponentType<Props>, Props>(\n    (props, ref) => React.createElement(MaskedComponent, { ...props, ref })\n  );\n}\n","import React from 'react';\nimport IMaskMixin, { IMaskInputProps } from './mixin';\n\n\nconst IMaskInputClass = IMaskMixin(({ inputRef, ...props }) =>\n  React.createElement('input', {\n    ...props,\n    ref: inputRef,\n  })\n);\n\nconst IMaskInputFn = <\n  Props extends IMaskInputProps<HTMLInputElement>,\n>(\n  props: Props,\n  ref: React.Ref<React.ComponentType<Props>>\n) =>\n  React.createElement(IMaskInputClass as any, { ...props, ref })  // TODO fix no idea\n;\n\nconst IMaskInput = React.forwardRef(IMaskInputFn as <\n  Props extends IMaskInputProps<HTMLInputElement>,\n>(\n  props: Props & { ref?: React.Ref<React.ComponentType<Props>> }\n) => React.ReactElement<Props>);\n\n\nexport default IMaskInput;\n","import IMask, { type InputMask, type InputMaskElement, type FactoryOpts } from 'imask';\nimport { useEffect, useCallback, useState, useRef, Dispatch } from 'react';\nimport type { MutableRefObject } from 'react';\nimport type { ReactMaskProps } from './mixin';\n\n\nexport default\nfunction useIMask<\n  MaskElement extends InputMaskElement,\n  Opts extends FactoryOpts=FactoryOpts,\n>(\n  opts: Opts,\n  { onAccept, onComplete }: {\n    onAccept?: (value: InputMask<Opts>['value'], maskRef: InputMask<Opts>, e?: InputEvent) => void;\n    onComplete?: (value: InputMask<Opts>['value'], maskRef: InputMask<Opts>, e?: InputEvent) => void;\n  } = {}\n): {\n  ref: MutableRefObject<MaskElement | null>,\n  maskRef: MutableRefObject<InputMask<Opts> | null>,\n  value: InputMask<Opts>['value'],\n  setValue: Dispatch<InputMask<Opts>['value']>,\n  unmaskedValue: InputMask<Opts>['unmaskedValue'],\n  setUnmaskedValue: Dispatch<InputMask<Opts>['unmaskedValue']>,\n  typedValue: InputMask<Opts>['typedValue'],\n  setTypedValue: Dispatch<InputMask<Opts>['typedValue']>,\n} {\n  const ref = useRef<MaskElement | null>(null);\n  const maskRef = useRef<InputMask<Opts> | null>(null);\n  const [initialized, setInitialized] = useState<boolean>(false);\n  const [lastAcceptState, setLastAcceptState] = useState<{\n    value?: InputMask<Opts>['value'],\n    unmaskedValue?: InputMask<Opts>['unmaskedValue'],\n    typedValue?: InputMask<Opts>['typedValue'],\n  }>({});\n  const [value, setValue] = useState<InputMask<Opts>['value']>('');\n  const [unmaskedValue, setUnmaskedValue] = useState<InputMask<Opts>['unmaskedValue']>('');\n  const [typedValue, setTypedValue] = useState<InputMask<Opts>['typedValue']>();\n\n  const _destroyMask = useCallback(() => {\n    if (!initialized) return;\n    maskRef.current?.destroy();\n    maskRef.current = null;\n  }, []);\n\n  const _onAccept = useCallback(\n    (event?: InputEvent) => {\n      const m = maskRef.current;\n      if (!m) return;\n\n      setLastAcceptState({\n        value: m.value,\n        unmaskedValue: m.unmaskedValue,\n        typedValue: m.typedValue,\n      });\n      setTypedValue(m.typedValue);\n      setUnmaskedValue(m.unmaskedValue);\n      setValue(m.value);\n      onAccept?.(m.value, m, event);\n    },\n    [onAccept],\n  );\n\n  const _onComplete = useCallback(\n    () => maskRef.current && onComplete?.(maskRef.current.value, maskRef.current),\n    [onComplete],\n  );\n\n  useEffect(() => {\n    const el = ref.current;\n\n    if (!el || !opts?.mask) return _destroyMask();\n\n    const mask = maskRef.current;\n\n    if (!mask) {\n      if (el && opts?.mask) {\n        maskRef.current = IMask(el, opts);\n        _onAccept();\n      }\n    } else {\n      mask?.updateOptions(opts as any); // TODO fix no idea\n    }\n    setInitialized(Boolean(maskRef.current));\n  }, [opts, _destroyMask, _onAccept]);\n\n  useEffect(() => {\n    if (!maskRef.current) return;\n\n    const mask = maskRef.current;\n\n    mask.on('accept', _onAccept);\n    mask.on('complete', _onComplete);\n\n    return () => {\n      mask.off('accept', _onAccept);\n      mask.off('complete', _onComplete);\n    };\n  }, [_onAccept, _onComplete]);\n\n  useEffect(() => {\n    const { value: lastAcceptValue, ...state } = lastAcceptState;\n    const mask = maskRef.current;\n    if (mask && initialized) {\n      if (lastAcceptValue !== value) mask.value = value;\n      setLastAcceptState(state);\n    }\n  }, [value]);\n\n  useEffect(() => {\n    const { unmaskedValue: lastAcceptUnmaskedValue, ...state } = lastAcceptState;\n    const mask = maskRef.current;\n    if (mask && initialized) {\n      if (lastAcceptUnmaskedValue !== unmaskedValue) mask.unmaskedValue = unmaskedValue;\n      setLastAcceptState(state);\n    }\n  }, [unmaskedValue]);\n\n  useEffect(() => {\n    const { typedValue: lastAcceptTypedValue, ...state } = lastAcceptState;\n    const mask = maskRef.current;\n    if (mask && initialized) {\n      if (lastAcceptTypedValue !== typedValue) mask.typedValue = typedValue;\n      setLastAcceptState(state);\n    }\n  }, [typedValue]);\n\n  useEffect(() => _destroyMask, [_destroyMask]);\n\n  return {\n    ref,\n    maskRef,\n    value, setValue,\n    unmaskedValue, setUnmaskedValue,\n    typedValue, setTypedValue,\n  };\n}\n"],"names":["MASK_PROPS","mask","PropTypes","oneOfType","array","func","string","instanceOf","RegExp","oneOf","Date","Number","IMask","Masked","value","any","unmask","bool","prepare","prepareChar","validate","commit","overwrite","eager","skipInvalid","onAccept","onComplete","placeholderChar","displayChar","lazy","definitions","object","blocks","enum","arrayOf","maxLength","number","from","to","pattern","format","parse","autofix","radix","thousandsSeparator","mapToRadix","scale","normalizeZeros","padFractionalZeros","min","max","dispatch","inputRef","shape","current","MASK_PROPS_NAMES","Object","keys","filter","p","NON_MASK_OPTIONS_NAMES","MASK_OPTIONS_NAMES","pName","indexOf","IMaskMixin","ComposedComponent","MaskedComponent","React","Component","displayName","propTypes","constructor","props","_inputRef","bind","componentDidMount","initMask","componentDidUpdate","maskOptions","_extractMaskOptionsFromProps","maskRef","updateOptions","undefined","maskValue","destroyMask","element","isContentEditable","tagName","textContent","componentWillUnmount","el","prototype","hasOwnProperty","call","on","_onAccept","_onComplete","destroy","cloneProps","prop","forEach","nonMaskProp","_extractNonMaskProps","maskProp","defaultValue","typedValue","unmaskedValue","e","render","createElement","nestedComponentName","name","forwardRef","ref","IMaskInputClass","_ref","IMaskInputFn","IMaskInput","useIMask","opts","_temp","useRef","initialized","setInitialized","useState","lastAcceptState","setLastAcceptState","setValue","setUnmaskedValue","setTypedValue","_destroyMask","useCallback","event","m","useEffect","Boolean","off","lastAcceptValue","state","lastAcceptUnmaskedValue","lastAcceptTypedValue"],"mappings":"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"}