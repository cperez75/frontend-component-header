{"version":3,"file":"BaseSelectionStatus.js","names":["React","useContext","PropTypes","FormattedMessage","Button","DataTableContext","SELECT_ALL_TEST_ID","CLEAR_SELECTION_TEST_ID","BaseSelectionStatus","_ref","className","clearSelectionText","numSelectedRows","numSelectedRowsOnPage","onSelectAll","onClear","selectAllText","allSelectedText","selectedText","itemCount","filteredRows","isPaginated","state","isSelectable","maxSelectedRows","hasAppliedFilters","filters","length","isAllRowsSelected","filteredItems","hasMaxSelectedRows","intlAllSelectedText","createElement","id","defaultMessage","description","values","defaultSelectedText","intlSelectedText","variant","size","onClick","defaultProps","undefined","propTypes","string","oneOfType","element","number","isRequired","func"],"sources":["../../../src/DataTable/selection/BaseSelectionStatus.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../Button';\nimport DataTableContext from '../DataTableContext';\nimport {\n  SELECT_ALL_TEST_ID,\n  CLEAR_SELECTION_TEST_ID,\n} from './data/constants';\n\nfunction BaseSelectionStatus({\n  className,\n  clearSelectionText,\n  numSelectedRows,\n  numSelectedRowsOnPage,\n  onSelectAll,\n  onClear,\n  selectAllText,\n  allSelectedText,\n  selectedText,\n}) {\n  const {\n    itemCount, filteredRows, isPaginated, state,\n    isSelectable, maxSelectedRows,\n  } = useContext(DataTableContext);\n  const hasAppliedFilters = state?.filters?.length > 0;\n  const isAllRowsSelected = numSelectedRows === itemCount;\n  const filteredItems = filteredRows?.length || itemCount;\n  const hasMaxSelectedRows = isSelectable && maxSelectedRows;\n\n  const intlAllSelectedText = allSelectedText || (\n    <FormattedMessage\n      id=\"pgn.DataTable.BaseSelectionStatus.allSelectedText\"\n      defaultMessage=\"All {numSelectedRows} selected\"\n      description=\"Text for all selected label\"\n      values={{ numSelectedRows }}\n    />\n  );\n\n  const defaultSelectedText = isPaginated || hasAppliedFilters ? (\n    <FormattedMessage\n      id=\"pgn.DataTable.BaseSelectionStatus.selectedTextPaginated\"\n      defaultMessage=\"{numSelectedRows} selected ({numSelectedRowsOnPage} shown below)\"\n      description=\"Text for selected label when table is paginated\"\n      values={{ numSelectedRows, numSelectedRowsOnPage }}\n    />\n  ) : (\n    <FormattedMessage\n      id=\"pgn.DataTable.BaseSelectionStatus.selectedText\"\n      defaultMessage=\"{numSelectedRows} selected\"\n      description=\"Text for selected label\"\n      values={{ numSelectedRows }}\n    />\n  );\n\n  const intlSelectedText = selectedText || defaultSelectedText;\n\n  return (\n    <div className={className} data-testid=\"selection-status-component\">\n      <span data-testid=\"selection-status\">\n        {isAllRowsSelected ? intlAllSelectedText : intlSelectedText}\n      </span>\n      {!isAllRowsSelected && !hasMaxSelectedRows && (\n        <Button\n          data-testid={SELECT_ALL_TEST_ID}\n          variant=\"link\"\n          size=\"inline\"\n          onClick={onSelectAll}\n        >\n          {selectAllText || (\n            <FormattedMessage\n              id=\"pgn.DataTable.BaseSelectionStatus.selectAllText\"\n              defaultMessage=\"Select all {itemCount}\"\n              description=\"A label for select all button.\"\n              values={{ itemCount: filteredItems }}\n            />\n          )}\n        </Button>\n      )}\n      {numSelectedRows > 0 && (\n        <Button\n          data-testid={CLEAR_SELECTION_TEST_ID}\n          variant=\"link\"\n          size=\"inline\"\n          onClick={onClear}\n        >\n          {clearSelectionText || (\n            <FormattedMessage\n              id=\"pgn.DataTable.BaseSelectionStatus.clearSelectionText\"\n              defaultMessage=\"Clear selection\"\n              description=\"A label of clear all selection button.\"\n            />\n          )}\n        </Button>\n      )}\n    </div>\n  );\n}\n\nBaseSelectionStatus.defaultProps = {\n  className: undefined,\n  selectAllText: undefined,\n  allSelectedText: undefined,\n  selectedText: undefined,\n  clearSelectionText: undefined,\n};\n\nBaseSelectionStatus.propTypes = {\n  /** A class name to append to the base element */\n  className: PropTypes.string,\n  /** A text that appears on the `Clear selection` button, defaults to 'Clear selection' */\n  clearSelectionText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /** Count of selected rows in the table. */\n  numSelectedRows: PropTypes.number.isRequired,\n  /** Count of selected rows on the current page */\n  numSelectedRowsOnPage: PropTypes.number.isRequired,\n  /** A handler for 'Select all' button. */\n  onSelectAll: PropTypes.func.isRequired,\n  /** A handler for 'Clear selection' button. */\n  onClear: PropTypes.func.isRequired,\n  /** A text that appears on the `Select all` button, defaults to 'Select All {itemCount}' */\n  selectAllText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /** A text that appears when all items have been selected, defaults to 'All {numSelectedRows} selected' */\n  allSelectedText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  /** A text that appears when some items have been selected, defaults to '{numSelectedRows} selected' */\n  selectedText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nexport default BaseSelectionStatus;\n"],"mappings":"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"}