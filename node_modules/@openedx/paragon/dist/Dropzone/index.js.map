{"version":3,"file":"index.js","names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","Array","from","test","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","isArray","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","useState","PropTypes","classNames","useDropzone","ErrorCode","fromEvent","useIntl","DragError","GenericError","UploadProgress","DefaultContent","messages","getTypesString","isMultipleTypes","formatBytes","Dropzone","_ref","className","accept","minSize","maxSize","validator","errorMessages","progressVariant","inputComponent","onProcessUpload","onUploadProgress","onUploadCancel","props","_excluded","_useState","_useState2","isMultipleDragged","setIsMultipleDragged","_useState3","_useState4","errors","setErrors","_useState5","_useState6","progress","setProgress","_useState7","_useState8","fileName","setFileName","_useState9","_useState10","controller","setController","intl","uploadErrorMsg","uploadError","invalidSizeLessMsg","invalidSizeLess","invalidSizeMoreMsg","invalidSizeMore","invalidTypeMsg","invalidType","multipleDraggedMsg","multipleDragged","onDragEnter","_ref2","_callee","e","files","_callee$","_context","_x2","onDragLeave","onDropRejected","map","code","FileTooLarge","formatMessage","size","FileTooSmall","FileInvalidType","count","typeString","unexpectedValidationError","handleProgressUpload","progressEvent","percentValue","Math","round","loaded","total","handleUploadError","processUpload","fileData","newController","AbortController","requestConfig","signal","handleError","onDropAccepted","_ref3","_callee2","file","customValidationError","formData","_callee2$","_context2","FormData","append","_x3","handleUploadCancel","abort","_useDropzone","multiple","maxFiles","disabled","getRootProps","getInputProps","isDragActive","isDragReject","renderContent","createElement","message","Fragment","errorMsgs","variant","percent","onCancel","_extends","defaultProps","Infinity","propTypes","string","objectOf","arrayOf","number","func","isRequired","shape","oneOfType","element","oneOf","elementType","node"],"sources":["../../src/Dropzone/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useDropzone, ErrorCode } from 'react-dropzone';\nimport { fromEvent } from 'file-selector';\nimport { useIntl } from 'react-intl';\n\nimport DragError from './DragError';\nimport GenericError from './GenericError';\nimport UploadProgress from './UploadProgress';\nimport DefaultContent from './DefaultContent';\nimport messages from './messages';\nimport { getTypesString, isMultipleTypes, formatBytes } from './utils';\n\nfunction Dropzone({\n  className, accept, minSize, maxSize, validator,\n  errorMessages, progressVariant, inputComponent,\n  onProcessUpload, onUploadProgress, onUploadCancel,\n  ...props\n}) {\n  const [isMultipleDragged, setIsMultipleDragged] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [fileName, setFileName] = useState(undefined);\n  const [controller, setController] = useState(undefined);\n  const intl = useIntl();\n\n  const {\n    uploadError: uploadErrorMsg,\n    invalidSizeLess: invalidSizeLessMsg,\n    invalidSizeMore: invalidSizeMoreMsg,\n    invalidType: invalidTypeMsg,\n    multipleDragged: multipleDraggedMsg,\n  } = errorMessages;\n\n  const onDragEnter = async (e) => {\n    if (errors) {\n      setErrors([]);\n    }\n    const files = await fromEvent(e);\n    if (files && files.length > 1) {\n      setIsMultipleDragged(true);\n    }\n  };\n\n  const onDragLeave = () => {\n    if (isMultipleDragged) {\n      setIsMultipleDragged(false);\n    }\n  };\n\n  const onDropRejected = (files) => {\n    if (!isMultipleDragged) {\n      setErrors(files[0].errors.map(error => {\n        switch (error.code) {\n          case ErrorCode.FileTooLarge:\n            return invalidSizeMoreMsg || intl.formatMessage(messages.invalidSizeMore, { size: formatBytes(maxSize) });\n          case ErrorCode.FileTooSmall:\n            return invalidSizeLessMsg || intl.formatMessage(messages.invalidSizeLess, { size: formatBytes(minSize) });\n          case ErrorCode.FileInvalidType:\n            return invalidTypeMsg || intl.formatMessage(\n              messages.invalidType,\n              { count: isMultipleTypes(accept) ? 2 : 1, typeString: getTypesString(accept) },\n            );\n          default:\n            return intl.formatMessage(messages.unexpectedValidationError);\n        }\n      }));\n    } else {\n      setIsMultipleDragged(false);\n    }\n  };\n\n  const handleProgressUpload = (progressEvent) => {\n    const percentValue = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n    setProgress(percentValue);\n    onUploadProgress(percentValue, progressEvent);\n  };\n\n  const handleUploadError = (error) => {\n    // check if request has been canceled before treating the exception as an upload error\n    if (error.code !== 'ERR_CANCELED') {\n      setProgress(0);\n      setErrors([uploadErrorMsg || intl.formatMessage(messages.uploadError)]);\n    }\n  };\n\n  const processUpload = (fileData) => {\n    const newController = new AbortController();\n    setController(newController);\n\n    const requestConfig = {\n      onUploadProgress: handleProgressUpload,\n      signal: newController.signal,\n    };\n\n    onProcessUpload({\n      fileData,\n      requestConfig,\n      handleError: handleUploadError,\n    });\n  };\n\n  const onDropAccepted = async (files) => {\n    const file = files[0];\n    if (validator) {\n      const customValidationError = await validator(file);\n      if (customValidationError) {\n        setErrors([customValidationError]);\n        return;\n      }\n    }\n\n    if (errors) {\n      setErrors([]);\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    setFileName(file.name);\n\n    processUpload(formData);\n  };\n\n  const handleUploadCancel = () => {\n    controller.abort();\n    setProgress(0);\n    onUploadCancel();\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    maxFiles: 1,\n    maxSize,\n    minSize,\n    onDragLeave,\n    onDragEnter,\n    onDropRejected,\n    onDropAccepted,\n    accept,\n    disabled: progress && progress !== 100,\n  });\n\n  const renderContent = () => {\n    if (isMultipleDragged) {\n      return <DragError message={multipleDraggedMsg || intl.formatMessage(messages.multipleDragged)} />;\n    }\n\n    if (errors.length > 0) {\n      return (\n        <>\n          <GenericError errorMsgs={errors} />\n          {inputComponent || <DefaultContent minSize={minSize} maxSize={maxSize} accept={accept} />}\n        </>\n      );\n    }\n\n    if (progress && progress !== 100) {\n      return (\n        <UploadProgress\n          variant={progressVariant}\n          percent={progress}\n          name={fileName}\n          onCancel={handleUploadCancel}\n        />\n      );\n    }\n\n    return inputComponent || <DefaultContent minSize={minSize} maxSize={maxSize} accept={accept} />;\n  };\n\n  return (\n    <div\n      data-testid=\"dropzone-container\"\n      {...getRootProps({\n        className: classNames('pgn__dropzone', className, {\n          'pgn__dropzone-validation-error': isMultipleDragged || errors.length > 0 || isDragReject,\n          'pgn__dropzone-active': isDragActive && !isDragReject,\n        }),\n      })}\n      {...props}\n    >\n      <input {...getInputProps()} />\n      <div className=\"d-flex flex-column justify-content-around align-items-center w-100\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nDropzone.defaultProps = {\n  className: undefined,\n  accept: undefined,\n  maxSize: Infinity,\n  minSize: 0,\n  onUploadProgress: () => {},\n  onUploadCancel: () => {},\n  errorMessages: {\n    invalidType: undefined,\n    invalidSizeLess: undefined,\n    invalidSizeMore: undefined,\n    multipleDragged: undefined,\n    uploadError: undefined,\n  },\n  progressVariant: 'spinner',\n  validator: undefined,\n  inputComponent: undefined,\n};\n\nDropzone.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /**\n   * Set accepted file types.\n   * This should be an object with the keys set to the\n   * [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types)\n   * and the values to an array of file extensions.\n   */\n  accept: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\n  /** Maximum file size (in bytes). */\n  maxSize: PropTypes.number,\n  /** Minimum file size (in bytes). */\n  minSize: PropTypes.number,\n  /**\n   * A callback fired each time an upload progress event happens,\n   * receives (percentageUploaded, progressEvent) as arguments.\n   */\n  onUploadProgress: PropTypes.func,\n  /** A callback fired upon successful upload, receives Response object as a single argument. */\n  onUploadCancel: PropTypes.func,\n  /**\n   * A function responsible for uploading the file.\n   * Receives following object as its only argument\n   * {\n   *   @param {object} fileData - Metadata about the uploaded file.\n   *   @param {object} requestConfig - Config to pass to `axios` call.\n   *   @param {function} handleError - Function to communicate to `Dropzone` that file upload resulted in failure,\n   *   expects `Error` object to be passed as its only argument.\n   * }\n   */\n  onProcessUpload: PropTypes.func.isRequired,\n  /**\n   * An object containing error messages, following are supported:\n   * 1) invalidType - A message to display when file of invalid type is dropped into `Dropzone`.\n   * Defaults to 'The file type must be {filType} file / one of {fileTypes} files.'.\n   * 2) invalidSizeLess - A message to display when file of size less than minSize value is dropped into `Dropzone`.\n   * Defaults to 'File must be larger than {minSize}.'.\n   * 3) invalidSizeMore - A message to display when file of size greater than maxSize value is dropped into `Dropzone`.\n   * Defaults to 'File must be less than {maxSize}.'.\n   * 4) multipleDragged - A message to display when multiple files are dragged over `Dropzone`.\n   * 5) uploadError - A message to display in case upload results in an error\n   */\n  errorMessages: PropTypes.shape({\n    invalidType: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    invalidSizeLess: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    invalidSizeMore: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    multipleDragged: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    uploadError: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  }),\n  /** Specifies how the upload progress should be displayed, component shows either spinner or a progress bar. */\n  progressVariant: PropTypes.oneOf(['spinner', 'bar']),\n  /**\n   * Custom validation function, receives `File` object as its only argument.\n   * Note that this function will be invoked as a last validation step before beginning an upload process.\n   */\n  validator: PropTypes.func,\n  /** A component to display initial state of the `Dropzone`. */\n  inputComponent: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]),\n};\n\nexport default Dropzone;\n"],"mappings":"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"}