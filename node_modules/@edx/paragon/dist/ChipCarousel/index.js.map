{"version":3,"file":"index.js","names":["React","PropTypes","useIntl","classNames","OverflowScroll","OverflowScrollContext","IconButton","Icon","ArrowForward","ArrowBack","messages","Chip","ChipCarousel","forwardRef","_ref","ref","className","items","ariaLabel","disableOpacityMasks","onScrollPrevious","onScrollNext","canScrollHorizontal","offset","offsetType","gap","props","_objectWithoutProperties","_excluded","intl","createElement","_extends","hasInteractiveChildren","disableScroll","Consumer","_ref2","setOverflowRef","isScrolledToStart","isScrolledToEnd","scrollToPrevious","scrollToNext","Fragment","size","src","iconAs","alt","formatMessage","onClick","Items","map","item","id","children","_objectSpread","key","propTypes","string","isRequired","arrayOf","element","bool","func","oneOfType","number","oneOf","defaultProps","undefined"],"sources":["../../src/ChipCarousel/index.tsx"],"sourcesContent":["import React, { ForwardedRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport classNames from 'classnames';\n// @ts-ignore\nimport { OverflowScroll, OverflowScrollContext } from '../OverflowScroll';\n// @ts-ignore\nimport IconButton from '../IconButton';\n// @ts-ignore\nimport Icon from '../Icon';\n// @ts-ignore\nimport { ArrowForward, ArrowBack } from '../../icons';\n// @ts-ignore\nimport messages from './messages';\nimport Chip from '../Chip';\n\nexport interface OverflowScrollContextProps {\n  setOverflowRef: () => void,\n  isScrolledToStart: boolean,\n  isScrolledToEnd: boolean,\n  scrollToPrevious: () => void,\n  scrollToNext: () => void,\n}\n\nexport interface ChipCarouselProps {\n  className?: string;\n  items: Array<React.ReactElement>;\n  ariaLabel: string;\n  disableOpacityMasks?: boolean;\n  onScrollPrevious?: () => void;\n  onScrollNext?: () => void;\n  canScrollHorizontal?: boolean;\n  offset?: number | string;\n  offsetType?: 'percentage' | 'fixed';\n  gap?: number;\n}\n\nconst ChipCarousel = React.forwardRef(({\n  className,\n  items,\n  ariaLabel,\n  disableOpacityMasks,\n  onScrollPrevious,\n  onScrollNext,\n  canScrollHorizontal = false,\n  offset = 120,\n  offsetType = 'fixed',\n  gap,\n  ...props\n}: ChipCarouselProps, ref: ForwardedRef<HTMLDivElement>) => {\n  const intl = useIntl();\n\n  return (\n    <div\n      className={classNames('pgn__chip-carousel', className, gap ? `pgn__chip-carousel-gap__${gap}` : '')}\n      {...props}\n      ref={ref}\n    >\n      <OverflowScroll\n        ariaLabel={ariaLabel}\n        hasInteractiveChildren\n        disableScroll={!canScrollHorizontal}\n        disableOpacityMasks={disableOpacityMasks}\n        onScrollPrevious={onScrollPrevious}\n        onScrollNext={onScrollNext}\n        offset={offset}\n        offsetType={offsetType}\n      >\n        <OverflowScrollContext.Consumer>\n          {({\n            setOverflowRef,\n            isScrolledToStart,\n            isScrolledToEnd,\n            scrollToPrevious,\n            scrollToNext,\n          }: OverflowScrollContextProps) => (\n            <>\n              <>\n                {!isScrolledToStart && (\n                  <IconButton\n                    size=\"sm\"\n                    className=\"pgn__chip-carousel__left-control\"\n                    src={ArrowBack}\n                    iconAs={Icon}\n                    alt={intl.formatMessage(messages.scrollToPrevious)}\n                    onClick={scrollToPrevious}\n                  />\n                )}\n                {!isScrolledToEnd && (\n                  <IconButton\n                    size=\"sm\"\n                    className=\"pgn__chip-carousel__right-control\"\n                    src={ArrowForward}\n                    iconAs={Icon}\n                    alt={intl.formatMessage(messages.scrollToNext)}\n                    onClick={scrollToNext}\n                  />\n                )}\n              </>\n              <div ref={setOverflowRef} className=\"d-flex\">\n                <OverflowScroll.Items>\n                  {items?.map((item, id) => {\n                    const { children } = item?.props || {};\n                    if (!children) {\n                      return null;\n                    }\n                    // eslint-disable-next-line react/no-array-index-key\n                    return React.createElement(Chip, { ...item.props, key: id });\n                  })}\n                </OverflowScroll.Items>\n              </div>\n            </>\n          )}\n        </OverflowScrollContext.Consumer>\n      </OverflowScroll>\n    </div>\n  );\n});\n\nChipCarousel.propTypes = {\n  /** Text describing the ChipCarousel for screen readers. */\n  ariaLabel: PropTypes.string.isRequired,\n  /** Specifies class name for the ChipCarousel. */\n  className: PropTypes.string,\n  /** Specifies array of `Chip` elements to be rendered inside the carousel. */\n  // @ts-ignore\n  items: PropTypes.arrayOf(PropTypes.element).isRequired,\n  /** Whether the default opacity masks should be shown at the start/end, if applicable. */\n  disableOpacityMasks: PropTypes.bool,\n  /** Callback function for when the user scrolls to the previous element. */\n  onScrollPrevious: PropTypes.func,\n  /** Callback function for when the user scrolls to the next element. */\n  onScrollNext: PropTypes.func,\n  /** Whether users can scroll within the overflow container. */\n  canScrollHorizontal: PropTypes.bool,\n  /** A value specifying the distance the scroll should move. */\n  offset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Type of offset value (percentage or fixed). */\n  offsetType: PropTypes.oneOf(['percentage', 'fixed']),\n  /**\n   * Specifies inner space between children blocks.\n   *\n   * Valid values are based on `the spacing classes`:\n   * `0, 0.5, ... 6`.\n   */\n  gap: PropTypes.number,\n};\n\nChipCarousel.defaultProps = {\n  className: undefined,\n  disableOpacityMasks: undefined,\n  onScrollPrevious: undefined,\n  onScrollNext: undefined,\n  canScrollHorizontal: false,\n  offset: 120,\n  offsetType: 'fixed',\n  gap: 3,\n};\n\nexport default ChipCarousel;\n"],"mappings":"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"}