{"version":3,"file":"index.js","names":["classNames","PropTypes","React","MediaQuery","ChevronLeft","ChevronRight","ArrowBackIos","ArrowForwardIos","greaterThan","Button","Dropdown","IconButton","Icon","breakpoints","newId","ELLIPSIS","getPaginationRange","PAGINATION_BUTTON_LABEL_PREV","PAGINATION_BUTTON_LABEL_NEXT","PAGINATION_BUTTON_LABEL_PAGE","PAGINATION_BUTTON_LABEL_CURRENT_PAGE","PAGINATION_BUTTON_LABEL_PAGE_OF_COUNT","PAGINATION_BUTTON_ICON_BUTTON_NEXT_ALT","PAGINATION_BUTTON_ICON_BUTTON_PREV_ALT","VARIANTS","secondary","reduced","minimal","ReducedPagination","_ref","currentPage","pageCount","handlePageSelect","createElement","Toggle","variant","id","Menu","className","_toConsumableArray","Array","keys","map","pageNum","Item","onClick","key","Pagination","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","previousButtonRef","nextButtonRef","pageRefs","state","pageButtonSelected","bind","_assertThisInitialized","_createClass","value","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","_this$state","currentPageRef","focus","setPageButtonSelectedState","setState","page","onPageSelect","handlePreviousNextButtonClick","renderEllipsisButton","renderPageButton","_this2","buttonLabels","active","ariaLabel","concat","ref","element","toString","renderPageOfCountButton","_this$props","pageOfCount","label","renderPreviousButton","_this3","_this$props2","icons","size","isFirstPage","isDisabled","previousPage","iconSize","previous","disabled","tabIndex","undefined","leftIcon","src","iconAs","alt","renderNextButton","_this4","_this$props3","isLastPage","nextPage","next","rightIcon","renderScreenReaderSection","_this$props4","description","renderPageButtons","_this5","_this$props5","maxPagesDisplayed","pages","currentIndex","count","length","requireFirstAndLastPages","pageIndex","renderReducedPagination","renderMinimalPaginations","render","_classNames","_this$props6","invertColors","paginationLabel","_defineProperty","maxWidth","extraSmall","minWidth","small","Component","propTypes","func","isRequired","number","string","shape","node","oneOf","bool","defaultProps","Reduced"],"sources":["../../src/Pagination/index.jsx"],"sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport MediaQuery from 'react-responsive';\n\nimport {\n  ChevronLeft, ChevronRight, ArrowBackIos, ArrowForwardIos,\n} from '../../icons';\nimport { greaterThan } from '../utils/propTypes';\nimport Button from '../Button';\nimport Dropdown from '../Dropdown';\nimport IconButton from '../IconButton';\nimport Icon from '../Icon';\nimport breakpoints from '../utils/breakpoints';\nimport newId from '../utils/newId';\nimport { ELLIPSIS } from './constants';\nimport getPaginationRange from './getPaginationRange';\n\nexport const PAGINATION_BUTTON_LABEL_PREV = 'Previous';\nexport const PAGINATION_BUTTON_LABEL_NEXT = 'Next';\nexport const PAGINATION_BUTTON_LABEL_PAGE = 'Page';\nexport const PAGINATION_BUTTON_LABEL_CURRENT_PAGE = 'Current Page';\nexport const PAGINATION_BUTTON_LABEL_PAGE_OF_COUNT = 'of';\nexport const PAGINATION_BUTTON_ICON_BUTTON_NEXT_ALT = 'Go to next page';\nexport const PAGINATION_BUTTON_ICON_BUTTON_PREV_ALT = 'Go to previous page';\n\nconst VARIANTS = {\n  default: 'default',\n  secondary: 'secondary',\n  reduced: 'reduced',\n  minimal: 'minimal',\n};\n\nfunction ReducedPagination({ currentPage, pageCount, handlePageSelect }) {\n  if (pageCount <= 1) { return null; }\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"tertiary\" id=\"Pagination dropdown\">\n        {currentPage} of {pageCount}\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"pgn__reduced-pagination-dropdown\">\n        {[...Array(pageCount).keys()].map(pageNum => (\n          <Dropdown.Item\n            onClick={() => handlePageSelect(pageNum + 1)}\n            key={pageNum}\n            data-testid=\"pagination-dropdown-item\"\n          >\n            {pageNum + 1}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.previousButtonRef = null;\n    this.nextButtonRef = null;\n\n    this.pageRefs = {};\n\n    this.state = {\n      currentPage: this.props.currentPage,\n      pageButtonSelected: false,\n    };\n\n    this.handlePageSelect = this.handlePageSelect.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Update only when the props and currentPage state changes to avoid re-render\n    // if only the pageButtonSelected state is changed.\n    return nextProps !== this.props || nextState.currentPage !== this.state.currentPage;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage, pageButtonSelected } = this.state;\n    const currentPageRef = this.pageRefs[currentPage];\n\n    if (currentPageRef && pageButtonSelected) {\n      currentPageRef.focus();\n      this.setPageButtonSelectedState(false);\n    }\n    /* eslint-disable react/no-did-update-set-state */\n    if (\n      this.state.currentPage === prevState.currentPage\n      && (this.props.currentPage !== prevProps.currentPage\n      || this.props.currentPage !== this.state.currentPage)\n    ) {\n      this.setState({\n        currentPage: this.props.currentPage,\n      });\n    }\n  }\n\n  handlePageSelect(page) {\n    if (page !== this.state.currentPage) {\n      this.setState({\n        currentPage: page,\n        pageButtonSelected: true,\n      });\n      this.props.onPageSelect(page);\n    }\n  }\n\n  handlePreviousNextButtonClick(page) {\n    const { pageCount } = this.props;\n\n    if (page === 1) {\n      this.nextButtonRef.focus();\n    } else if (page === pageCount) {\n      this.previousButtonRef.focus();\n    }\n    this.setState({ currentPage: page });\n    this.props.onPageSelect(page);\n  }\n\n  setPageButtonSelectedState(value) {\n    this.setState({ pageButtonSelected: value });\n  }\n\n  renderEllipsisButton() {\n    return (\n      <li\n        className={classNames(['page-item', 'disabled'])}\n        key={newId('pagination-ellipsis-')}\n      >\n        <span\n          className={classNames([\n            'btn',\n            'page-link',\n            'ml-0',\n            'border-0',\n          ])}\n        >\n          ...\n        </span>\n      </li>\n    );\n  }\n\n  renderPageButton(page) {\n    const { buttonLabels } = this.props;\n    const active = page === this.state.currentPage || null;\n\n    let ariaLabel = `${buttonLabels.page} ${page}`;\n    if (active) {\n      ariaLabel += `, ${buttonLabels.currentPage}`;\n    }\n\n    return (\n      <li\n        className={classNames([\n          'page-item',\n          {\n            active,\n          },\n        ])}\n        key={page}\n      >\n        <Button\n          className=\"page-link\"\n          aria-label={ariaLabel}\n          ref={(element) => { this.pageRefs[page] = element; }}\n          onClick={() => { this.handlePageSelect(page); }}\n        >\n          {page.toString()}\n        </Button>\n      </li>\n    );\n  }\n\n  renderPageOfCountButton() {\n    const { currentPage } = this.state;\n    const { pageCount, buttonLabels } = this.props;\n\n    const ariaLabel = `${buttonLabels.page} ${currentPage}, ${buttonLabels.currentPage}, ${buttonLabels.pageOfCount} ${pageCount}`;\n\n    const label = (\n      <span>\n        {`${currentPage} `}\n        {buttonLabels.pageOfCount}\n        {` ${pageCount}`}\n      </span>\n    );\n\n    return (\n      <li\n        className={classNames(['page-item', 'disabled'])}\n        key={currentPage}\n      >\n        <span\n          className={classNames([\n            'btn',\n            'page-link',\n            'mx-2',\n            'border-0',\n          ])}\n          aria-label={ariaLabel}\n        >\n          {label}\n        </span>\n      </li>\n    );\n  }\n\n  renderPreviousButton() {\n    const {\n      buttonLabels, icons, variant, size, pageCount,\n    } = this.props;\n    const { currentPage } = this.state;\n    const isFirstPage = currentPage === 1;\n    const isDisabled = isFirstPage || pageCount === 0;\n    const previousPage = isFirstPage ? null : currentPage - 1;\n    const iconSize = (variant !== VARIANTS.reduced && size !== 'small') || variant === VARIANTS.minimal;\n\n    let ariaLabel = `${buttonLabels.previous}`;\n    if (previousPage) {\n      ariaLabel += `, ${buttonLabels.page} ${previousPage}`;\n    }\n\n    return (\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isDisabled,\n          },\n        )}\n      >\n        {\n          variant === VARIANTS.default\n            ? (\n              <Button\n                className=\"previous page-link\"\n                aria-label={ariaLabel}\n                tabIndex={isDisabled ? '-1' : undefined}\n                onClick={() => { this.handlePreviousNextButtonClick(previousPage); }}\n                ref={(element) => { this.previousButtonRef = element; }}\n                disabled={isDisabled}\n              >\n                <div>\n                  {icons.leftIcon}\n                  {variant === VARIANTS.default ? buttonLabels.previous : null}\n                </div>\n              </Button>\n            )\n            : (\n              <IconButton\n                src={iconSize ? ArrowBackIos : ChevronLeft}\n                iconAs={Icon}\n                className=\"previous page-link\"\n                aria-label={ariaLabel}\n                tabIndex={isDisabled ? '-1' : undefined}\n                onClick={() => { this.handlePreviousNextButtonClick(previousPage); }}\n                ref={(element) => { this.previousButtonRef = element; }}\n                disabled={isDisabled}\n                alt={PAGINATION_BUTTON_ICON_BUTTON_PREV_ALT}\n              />\n            )\n        }\n      </li>\n    );\n  }\n\n  renderNextButton() {\n    const {\n      buttonLabels, pageCount, icons, variant, size,\n    } = this.props;\n    const { currentPage } = this.state;\n    const isLastPage = (currentPage === pageCount);\n    const isDisabled = isLastPage || (pageCount <= 1);\n    const nextPage = isLastPage ? null : currentPage + 1;\n    const iconSize = (variant !== VARIANTS.reduced && size !== 'small') || variant === VARIANTS.minimal;\n\n    let ariaLabel = `${buttonLabels.next}`;\n    if (nextPage) {\n      ariaLabel += `, ${buttonLabels.page} ${nextPage}`;\n    }\n\n    return (\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isDisabled,\n          },\n        )}\n      >\n        {variant === VARIANTS.default ? (\n          <Button\n            className=\"next page-link\"\n            aria-label={ariaLabel}\n            tabIndex={isDisabled ? '-1' : undefined}\n            onClick={() => { this.handlePreviousNextButtonClick(nextPage); }}\n            ref={(element) => { this.nextButtonRef = element; }}\n            disabled={isDisabled}\n          >\n            <div>\n              {variant === VARIANTS.default ? buttonLabels.next : null}\n              {icons.rightIcon}\n            </div>\n          </Button>\n        ) : (\n          <IconButton\n            src={iconSize ? ArrowForwardIos : ChevronRight}\n            iconAs={Icon}\n            className=\"next page-link\"\n            aria-label={ariaLabel}\n            tabIndex={isDisabled ? '-1' : undefined}\n            onClick={() => { this.handlePreviousNextButtonClick(nextPage); }}\n            ref={(element) => { this.nextButtonRef = element; }}\n            disabled={isDisabled}\n            alt={PAGINATION_BUTTON_ICON_BUTTON_NEXT_ALT}\n          />\n        )}\n      </li>\n    );\n  }\n\n  renderScreenReaderSection() {\n    const { currentPage } = this.state;\n    const { buttonLabels, pageCount } = this.props;\n\n    const description = `${buttonLabels.page} ${currentPage}, ${buttonLabels.currentPage}, ${buttonLabels.pageOfCount} ${pageCount}`;\n\n    return (\n      <div\n        className=\"sr-only\"\n        aria-live=\"polite\"\n        aria-relevant=\"text\"\n        aria-atomic\n      >\n        {description}\n      </div>\n    );\n  }\n\n  renderPageButtons() {\n    const { currentPage } = this.state;\n    const { pageCount, maxPagesDisplayed } = this.props;\n\n    const pages = getPaginationRange({\n      currentIndex: currentPage,\n      count: pageCount,\n      length: maxPagesDisplayed,\n      requireFirstAndLastPages: true,\n    });\n\n    if (pageCount <= 1) {\n      return null;\n    }\n    return pages.map((pageIndex) => {\n      if (pageIndex === ELLIPSIS) {\n        return this.renderEllipsisButton();\n      }\n      return this.renderPageButton(pageIndex + 1);\n    });\n  }\n\n  renderReducedPagination() {\n    const { currentPage } = this.state;\n    const { pageCount } = this.props;\n\n    return (\n      <ul className=\"pagination\">\n        {this.renderPreviousButton()}\n        <ReducedPagination currentPage={currentPage} pageCount={pageCount} handlePageSelect={this.handlePageSelect} />\n        {this.renderNextButton()}\n      </ul>\n    );\n  }\n\n  renderMinimalPaginations() {\n    return (\n      <ul className=\"pagination\">\n        {this.renderPreviousButton()}\n        {this.renderNextButton()}\n      </ul>\n    );\n  }\n\n  render() {\n    const { variant, invertColors, size } = this.props;\n    return (\n      <nav\n        aria-label={this.props.paginationLabel}\n        className={classNames(this.props.className, {\n          [`pagination-${variant}`]: variant,\n          'pagination-inverse': invertColors,\n          'pagination-small': size !== VARIANTS.default,\n        })}\n      >\n        {this.renderScreenReaderSection()}\n        {variant === VARIANTS.default || variant === VARIANTS.secondary\n          ? (\n            <ul className=\"pagination\">\n              {this.renderPreviousButton()}\n              <MediaQuery maxWidth={breakpoints.extraSmall.maxWidth}>\n                {this.renderPageOfCountButton()}\n              </MediaQuery>\n              <MediaQuery minWidth={breakpoints.small.minWidth}>\n                {this.renderPageButtons()}\n              </MediaQuery>\n              {this.renderNextButton()}\n            </ul>\n          )\n          : null}\n        {variant === VARIANTS.reduced ? this.renderReducedPagination() : null}\n        {variant === VARIANTS.minimal ? this.renderMinimalPaginations() : null}\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = {\n  /**\n   * Specifies a callback function that is executed when the\n   * user selects a page button or the `Previous`/`Next` buttons. For example:\n   *\n   * ```jsx\n   *  <Pagination onPageSelect={(pageNumber) => { console.log(pageNumber); } />\n   * ```\n   */\n  onPageSelect: PropTypes.func.isRequired,\n  /** Specifies the total number of pages in the `Pagination` component. */\n  pageCount: PropTypes.number.isRequired,\n  /** Specifies the `aria-label` for the `<nav>` element that wraps the pagination button list. */\n  paginationLabel: PropTypes.string.isRequired,\n  /**\n   * Specifies the labels to use for the `Previous`/`Next`\n   * buttons as well as the various parts of `aria-label`\n   * on the page buttons for accessibility. All button labels\n   * accept both string or elements. The button label options are as follows:\n   *\n   * `previous`: Text for the `Previous` button;\n   *\n   * `next`: Text for the `Next` button;\n   *\n   * `page`: Text in the `aria-label` on page buttons to describe the button (e.g., \"**Page** 1\");\n   *\n   * `currentPage`: Text to depict the selected page in the `aria-label`\n   * on page buttons (e.g., \"Page 1, **Current Page**\");\n   *\n   * `pageOfCount`: Text that separates the current page and total page count\n   * for the mobile UI (e.g., \"Page 1 **of** 20\").\n   *\n   * The default is:\n   * ```javascript\n   * {\n   *   previous: 'Previous',\n   *   next: 'Next',\n   *   page: 'Page',\n   *   currentPage: 'Current Page',\n   *   pageOfCount: 'of',\n   * }\n   * ```\n   */\n  buttonLabels: PropTypes.shape({\n    previous: PropTypes.string,\n    next: PropTypes.string,\n    page: PropTypes.string,\n    currentPage: PropTypes.string,\n    pageOfCount: PropTypes.string,\n  }),\n  /** Specifies any class name(s) for the `Pagination` component. The default is an empty string. */\n  className: PropTypes.string,\n  /** specifies the page that the `Pagination` component will automatically select. The default is `1`. */\n  currentPage: PropTypes.number,\n  /**\n   * Specifies the number of page buttons to display in between the `Previous`\n   * and `Next` buttons. This number also includes any ellipses in the total count.\n   * Also, to ensure that at least one clickable page button is shown when both ellipses\n   * are displayed, this value must be greater than `4`. The default is `7`.\n   */\n  maxPagesDisplayed: greaterThan(4),\n  /**\n   * Specifies icons used to indicate previous and next page. Can be an element,\n   * string, symbol, etc. Default is chevrons rendered using fa-css.\n   */\n  icons: PropTypes.shape({\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n  }),\n  variant: PropTypes.oneOf(['default', 'secondary', 'reduced', 'minimal']),\n  invertColors: PropTypes.bool,\n  size: PropTypes.oneOf(['default', 'small']),\n};\n\nPagination.defaultProps = {\n  icons: {\n    leftIcon: <Icon src={ChevronLeft} />,\n    rightIcon: <Icon src={ChevronRight} />,\n  },\n  buttonLabels: {\n    previous: PAGINATION_BUTTON_LABEL_PREV,\n    next: PAGINATION_BUTTON_LABEL_NEXT,\n    page: PAGINATION_BUTTON_LABEL_PAGE,\n    currentPage: PAGINATION_BUTTON_LABEL_CURRENT_PAGE,\n    pageOfCount: PAGINATION_BUTTON_LABEL_PAGE_OF_COUNT,\n  },\n  className: undefined,\n  currentPage: 1,\n  maxPagesDisplayed: 7,\n  variant: 'default',\n  invertColors: false,\n  size: 'default',\n};\n\nReducedPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  handlePageSelect: PropTypes.func.isRequired,\n};\n\nPagination.Reduced = ReducedPagination;\n\nexport default Pagination;\n"],"mappings":"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"}